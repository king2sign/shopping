new Vue() 和 export default {}的区别？

	Vue是什么？
		解释：Vue就是一个构造函数,生产的实例是一个巨大的对象,可以包含数据、模板、挂载元素、方法、生命周期函数(钩子)等选项   
			  所以渲染的时候，可以使用构造 Vue 实例的方式来渲染相应的 html 页面：
		例子：	  
			new Vue({
				el: '#app'
				...
			})
			
	export default是什么？
		解释：是用来导出的某一个模板。。相当于暴露了一个接口给外界,让你其他文件可以通过import来引入这个模板并使用
			
	
	
//=====================================================================



export 和export default 的区别
	export：
		解释：export 可以导出多个命名模模板
		
		
		例子：	demo01.vue	
					<script>
						export const str = 'hello world'; //对外界暴露了一个变量(模板)

						export function f(a){ return a+1;}//对外界暴露了一个方法模板)
					</script>
				
				demo02.vue	
					<script>
						import { str, f } from 'demo1'
						//提示：引入某个页面中多个模块都要写在{}中
					</script>	
	
	export default {}：
		解释：
			1：是用来导出的。。相当于暴露了一个接口给外界,让你其他文件可以通过import来引入使用
			2：export default和export的区别是 前者只能导出一个 ，后者可以导出若干个
			3: 一般都是导出一个组件。然后去父组件中定义引入就能使用。
			4：export default中的内容当前vue文件是可以直接调用使用的 
			
		通俗：export default 我认为相当于使用Vue.component注册了一个全局组件或者是一个单纯的局部组件。
		      就像一个模板一样，还没有被用到 。=那在什么时候用呢。
		      创建实例的时候 也就是 new Vue({})创建一个实例之后 如果这个根实例中有调用这个组件，这时就发挥作用啦。
		
		例子：
			demo1.vue
				<script>
					export default {
						data () {
							return {
								msg:"小明"
							}
						},
						methods{
						
						}
					}
				</script>
				
			demo2.vue
				<script>
					import stuHead from "@/components/head"
					//注意：要指定到对应的路径下才能引入对应的接口
					//提示：引入的时候可以给这个模块取任意名字，例如 "liuzijiang"，且不需要用大括号括起来。
				</script>
